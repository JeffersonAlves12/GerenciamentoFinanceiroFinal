// <auto-generated />
using System;
using FinanceiroRazorTDS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceiroRazorTDS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FinanceiroRazorTDS.Models.CategoriaModel", b =>
                {
                    b.Property<long>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("DescricaoCategoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IconeCategoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("TransacaoId")
                        .HasColumnType("bigint");

                    b.HasKey("CategoriaId");

                    b.HasIndex("TransacaoId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("FinanceiroRazorTDS.Models.EventoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataConsolidacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FotoPath")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("FinanceiroRazorTDS.Models.InvestimentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDeCompra")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorAtual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorInvestido")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Investimentos");
                });

            modelBuilder.Entity("FinanceiroRazorTDS.Models.TransacaoModel", b =>
                {
                    b.Property<long>("TransacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataTransacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeTransacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoTransacao")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTransacao")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("TransacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("FinanceiroRazorTDS.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("MoedaUsuario")
                        .HasColumnType("int");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.Property<string>("UltimoNome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FinanceiroRazorTDS.Models.CategoriaModel", b =>
                {
                    b.HasOne("FinanceiroRazorTDS.Models.TransacaoModel", "Transacoes")
                        .WithMany("Categorias")
                        .HasForeignKey("TransacaoId");

                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("FinanceiroRazorTDS.Models.EventoModel", b =>
                {
                    b.HasOne("FinanceiroRazorTDS.Models.UsuarioModel", "Usuario")
                        .WithMany("Eventos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanceiroRazorTDS.Models.InvestimentoModel", b =>
                {
                    b.HasOne("FinanceiroRazorTDS.Models.UsuarioModel", "Usuario")
                        .WithMany("Investimentos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanceiroRazorTDS.Models.TransacaoModel", b =>
                {
                    b.HasOne("FinanceiroRazorTDS.Models.UsuarioModel", "Usuario")
                        .WithMany("Transacoes")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanceiroRazorTDS.Models.TransacaoModel", b =>
                {
                    b.Navigation("Categorias");
                });

            modelBuilder.Entity("FinanceiroRazorTDS.Models.UsuarioModel", b =>
                {
                    b.Navigation("Eventos");

                    b.Navigation("Investimentos");

                    b.Navigation("Transacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
